<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.sgmp.webapp.mapper.module.AnalogueMapper">

    <!-- 定义数据库字段与实体对象的映射关系 -->
    <resultMap type="org.sgmp.webapp.pojo.module.Analogue" id="analogueResultMap">
        <result column="GP_ID" property="gpId" javaType="java.lang.Long" jdbcType="NUMERIC" />
        <result column="ANALOGUE_NAME" property="analogueName" javaType="java.lang.String" jdbcType="VARCHAR" />
        <result column="RANGE_BEGIN" property="rangeBegin" javaType="java.lang.Float" jdbcType="NUMERIC" />
        <result column="RANGE_END" property="rangeEnd" javaType="java.lang.Float" jdbcType="NUMERIC" />
        <result column="MAX_VALUE" property="maxValue" javaType="java.lang.Float" jdbcType="NUMERIC" />
        <result column="MIN_VALUE" property="minValue" javaType="java.lang.Float" jdbcType="NUMERIC" />
        <result column="FREEZ_DENSITY" property="freezeDensity" javaType="java.lang.String" jdbcType="VARCHAR" />
    </resultMap>

    <insert id="create" parameterType="analogue">
        insert into C_ANALOGUE(GP_ID, ANALOGUE_NAME, RANGE_BEGIN, RANGE_END, MAX_VALUE, MIN_VALUE, FREEZ_DENSITY)
        values(#{gpId,jdbcType=NUMERIC}, #{analogueName,jdbcType=VARCHAR}, #{rangeBegin,jdbcType=NUMERIC}, #{rangeEnd,jdbcType=NUMERIC}, #{maxValue,jdbcType=NUMERIC}, #{minValue,jdbcType=NUMERIC}, #{freezeDensity,jdbcType=VARCHAR})
    </insert>

    <update id="update" parameterType="analogue">
        update C_ANALOGUE set
                ANALOGUE_NAME = #{analogueName,jdbcType=VARCHAR},
                RANGE_BEGIN = #{rangeBegin,jdbcType=NUMERIC},
                RANGE_END = #{rangeEnd,jdbcType=NUMERIC},
                MAX_VALUE = #{maxValue,jdbcType=NUMERIC},
                MIN_VALUE = #{minValue,jdbcType=NUMERIC},
                FREEZ_DENSITY = #{freezeDensity,jdbcType=VARCHAR}
         where GP_ID = #{gpId}
    </update>

    <delete id="delete" parameterType="analogue">
        delete from C_ANALOGUE
         where GP_ID = #{gpId}
    </delete>

    <delete id="deleteById" parameterType="java.lang.Long">
        delete from C_ANALOGUE
         where GP_ID = #{gpId}
    </delete>

    <select id="getById" parameterType="java.lang.Long" resultType="analogue" resultMap="analogueResultMap">
        select GP_ID, ANALOGUE_NAME, RANGE_BEGIN, RANGE_END, MAX_VALUE, MIN_VALUE, FREEZ_DENSITY
          from C_ANALOGUE
         where GP_ID = #{gpId}
    </select>

    <select id="getList" parameterType="java.util.Map" resultType="java.util.List" resultMap="analogueResultMap">
        select GP_ID, ANALOGUE_NAME, RANGE_BEGIN, RANGE_END, MAX_VALUE, MIN_VALUE, FREEZ_DENSITY
          from C_ANALOGUE
         order by GP_ID
    </select>

    <select id="getCount" parameterType="java.util.Map" resultType="java.lang.Integer">
        select count(1) as CNT
          from C_ANALOGUE
    </select>

</mapper>